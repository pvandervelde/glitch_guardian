name: Rust CI

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - master

# Sets permissions of the GITHUB_TOKEN to allow deployment to Azure
permissions:
  contents: read
  id-token: write

jobs:
  test:
    name: unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Install Rust
        run: rustup update stable

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@3451569d988f3b0b3eaccd1d1b539a75ec96f192 # v2
        with:
          tool: cargo-llvm-cov@0.6.10

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --codecov --output-path codecov.json
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: codecov.json
          fail_ci_if_error: true

  # Can only run this in PRs because the Azure OIDC is linked to PRs and building on the 'master' branch
  tf-test:
    name: Terraform Test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.0.0
      with:
        versionSpec: '6.0.0'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v3.0.0
      with:
        useConfigFile: true

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@ed3a0531877aca392eb870f440d9ae7aba83a6bd # v1

    - name: Azure Login
      uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a # v2
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - name: Terraform Init
      working-directory: env
      run: terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Terraform Plan
      working-directory: env
      run: |
        terraform plan -no-color \
          -var="github_token=${{ secrets.GITHUB_TOKEN }}" \
          -var="github_project_id=${{ secrets.GH_PROJECT_ID }}" \
          -var="meta_git_sha=${{ github.sha }}" \
          -var="meta_version=${{ env.fullSemVer }}" \
          -var="github_webhook_secret=${{ secrets.GH_WEBHOOK_SECRET }}"
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_USE_OIDC: true

  package:
    name: Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install function build chain
        run: rustup target add x86_64-unknown-linux-musl

      - name: Build
        run: cargo build --release --package handler --target x86_64-unknown-linux-musl --target-dir target/release

      - name: show output directories
        run: |
          ls -la
          ls -la target
          ls -la target/release

      - name: Build
        run: cargo build --release --package xtask

      - name: XTask
        run: cargo xtask

      - name: show directories
        run: |
          ls -la
          ls -la target
          ls -la target/func
